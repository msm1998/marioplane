{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedUpLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/authReducer.js","store/projectReducer.js","store/rootReducer.js","config/fbConfig.js","index.js"],"names":["compose","firestoreConnect","connect","state","console","log","initial","firebase","profile","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","withRouter","link","uid","layout_SignedInLinks","layout_SignedUpLinks","Link","Notifications","notifications","map","res","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","collection","orderBy","limit","firestore","ordered","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","cred","credintial","signInWithEmailAndPassword","catch","err","error","message","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authorId","add","objectSpread","createdAt","Date","CreateProject","history","push","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0299d679.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from '../../store/actions/authActions';\r\nimport {compose} from 'redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\n\r\n\r\nconst SignedInLinks =(props)=>{\r\n    console.log(props)\r\n    const {initial} = props;\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><NavLink to=\"/\" onClick={props.signOut}>Logout</NavLink></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{initial}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    console.log(state);\r\n    return{\r\n        initial:state.firebase.profile.initial,\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return{\r\n        signOut:() => dispatch(signOut())\r\n    }\r\n}\r\nexport default compose(\r\n    firestoreConnect(['users']),\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n)(SignedInLinks);","export const signIn =(credintial)=>{\r\n    return(dispatch,getState,{getFirebase})=>{\r\n        const firebase = getFirebase()\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credintial.email,\r\n            credintial.password\r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESSED'})\r\n        }).catch((err)=>{\r\n            dispatch({type:'LOGIN_ERROR',error:err.message})\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const signOut =()=>{\r\n    return(dispatch,getState,{getFirebase})=>{\r\n        const firebase = getFirebase()\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'SIGNOUT_SUCCESS'})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp =(newUser)=>{\r\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password,\r\n        ).then((resp)=>{\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName:newUser.firstName,\r\n                lastName:newUser.lastName,\r\n                initial:newUser.firstName[0]+newUser.lastName[0],\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type:'SIGNUP_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type:'SIGNUP_ERROR',error:err.message})\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst SignedUpLinks =(props)=>{\r\n    // console.log(props)\r\n    // setTimeout(() => {\r\n    //     props.history.push('/')\r\n    // }, 2000);\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default withRouter(SignedUpLinks);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedUpLinks from './SignedUpLinks';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Navbar =(props)=>{\r\n    const {auth} = props;\r\n    // console.log(auth);\r\n    const link = auth.uid ? <SignedInLinks /> : <SignedUpLinks />  \r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-4\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">MarioPlane</Link>\r\n                {link}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    \r\n    return{\r\n        auth:state.firebase.auth,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications =(props)=>{\r\n    const {notifications} = props;\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card\">\r\n                <div className=\"card-content\">\r\n                    <div className=\"card-title\">Notifications</div>\r\n                    <ul>\r\n                        {notifications && notifications.map(res=>{\r\n                            return(\r\n                                <li key = {res.id}>\r\n                                    <span className=\"pink-text\">{res.user} </span>\r\n                                    <span>{res.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(res.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}            \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\n// import moment from 'moment'\r\n\r\nconst ProjectSummary = ({project})=>{\r\n    console.log(project)\r\n    return(\r\n        <div className=\"card z-depth-0 project-summury\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by the {project.authorFirstName +\" \"+ project.authorLastName}</p>\r\n                {/* <p className=\"grey-text\">{project.createdAt}</p> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom';\r\nconst ProjectList =({projects})=>{\r\n    // console.log(projects)\r\n    return(\r\n        <div className=\"project-list sections\">\r\n            {projects && projects.map(project=>{\r\n                return(\r\n                    <Link to={'/projects/'+project.id} key={project.id}>\r\n                        <ProjectSummary project={project}  />\r\n                    </Link>\r\n                )\r\n            })}            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React,{Component} from 'react';\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from '../projects/ProjectList';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport { Redirect} from \"react-router-dom\";\r\nclass Dashboard extends Component{\r\n    render(){\r\n        const {projects,auth,notifications} = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return(\r\n            <div className=\"container dashboard\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\"><ProjectList projects={projects}/></div>\r\n                    <div className=\"col s12 m5 offset-m1\"><Notifications notifications={notifications}/></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    console.log(state)\r\n    return{\r\n        projects:state.firestore.ordered.projects,\r\n        auth:state.firebase.auth,\r\n        notifications:state.firestore.ordered.notifications,\r\n        // projects:state.project.projects,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect([{collection:'projects',orderBy:['createdAt','desc']},{collection:'notifications',limit:4,orderBy:['time','desc']}]\r\n    ),\r\n    connect(mapStateToProps)\r\n)(Dashboard);","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport {Redirect} from 'react-router-dom';\r\n// import moment from 'moment';\r\n\r\nconst ProjectDetails=(props)=> {\r\n    // const id = props.match.params.id\r\n    // console.log(props)\r\n    const {project ,auth} = props;\r\n    console.log(props)\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    if(project){\r\n        return(\r\n            <div className=\"section container project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <div className=\"card-title\">{project.title}</div>\r\n                        <p className=\"card-body\">{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>created by {project.authorFirstName} {project.authorLastName}</div> \r\n                        {/* <div>{project.createdAt}</div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n    return (\r\n        <div className=\"container center\">\r\n            <p>Project Loding...</p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state,ownProps)=>{\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return{\r\n        project:project,\r\n        auth:state.firebase.auth,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects'}\r\n    ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {signIn} from '../../store/actions/authActions';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email:'',\r\n        password:'',\r\n    }\r\n    handleChange =(e) =>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value,\r\n        })\r\n    }\r\n    handleSubmit =(e) =>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        // console.log(this.props);\r\n        const {authError,auth} =this.props;\r\n    if(auth.uid) return <Redirect to=\"/\" />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">\r\n                    SignIn\r\n                </h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"red-text center\">\r\n                    {authError}\r\n                </div>\r\n                <button className=\"btn pink lighen-1 z-depth-0\">Login</button>\r\n            </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    // console.log(state)\r\n    return{\r\n        authError:state.auth.authError,\r\n        auth:state.firebase.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return{\r\n        signIn:(cred)=>dispatch(signIn(cred)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\nclass SignUp extends Component {\r\n    state = {\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:'',\r\n    }\r\n    handleChange =(e) =>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value,\r\n        })\r\n    }\r\n    handleSubmit =(e) =>{\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n    const {auth,authError} = this.props;\r\n    if(auth.uid) return <Redirect to=\"/\" />\r\n    \r\n    return (\r\n      <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">\r\n                    SignUp\r\n                </h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstName\">FirstName</label>\r\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"lastName\">LastName</label>\r\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"red-text center\">{authError}</div>\r\n                <button className=\"btn pink lighen-1 z-depth-0\">SignUp</button>\r\n            </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    console.log(state)\r\n    return{\r\n        auth:state.firebase.auth,\r\n        authError:state.auth.authError,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        signUp :(user)=>dispatch(signUp(user)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","const createProject=(project)=>{\r\n    console.log(project);\r\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n        //connect to firstore\r\n        const firebase = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firebase.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId:authorId,\r\n            createdAt:new Date()\r\n        }).then(()=>{\r\n            dispatch({type:'ADD_PROJECT',project})\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_PROJECT_ERROR',err})\r\n\r\n        })\r\n    }\r\n};\r\n\r\nexport default createProject;","import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport createProject from '../../store/actions/projectActions';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title:'',\r\n        content:'',\r\n    }\r\n    handleChange =(e) =>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value,\r\n        })\r\n    }\r\n    handleSubmit =(e) =>{\r\n        e.preventDefault();\r\n        // console.log(this.props);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n    const {auth} = this.props;\r\n    if(!auth.uid) return <Redirect to='signin'/>\r\n    return (\r\n      <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\">\r\n                    Create New Project\r\n                </h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Project Title</label>\r\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Project Content</label>\r\n                    <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\r\n                </div>\r\n                <button className=\"btn pink lighen-1 z-depth-0\">Create</button>\r\n            </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        auth:state.firebase.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        createProject:(project)=> dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\r\n","import React, { Component } from 'react';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={Dashboard} />\n              <Route path=\"/projects/:id\" component={ProjectDetails} />\n              <Route path=\"/signin\" component={SignIn} />\n              <Route path=\"/signup\" component={SignUp} />\n              <Route path=\"/create\" component={CreateProject} />\n            </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState={\r\n    authError:null,\r\n}\r\n\r\nconst authReducer=(state=initState,action)=>{\r\n    switch (action.type) {\r\n        case 'LOGIN_SUCCESSED':\r\n            console.log('login successed');\r\n            return{\r\n                ...state,\r\n                authError:null,\r\n            }\r\n        case 'LOGIN_ERROR':\r\n            console.log(action.error)\r\n            return{\r\n                ...state,\r\n                authError:action.error,\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout');\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return state;\r\n        case 'SIGNUP_ERROR':\r\n            console.log(action.error);\r\n            return{\r\n                ...state,\r\n                authError:action.error,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default authReducer","const initState={\r\n    projects:[\r\n        {id:1,title:'reminder',content:'hello google'},\r\n        {id:2,title:'call',content:'hello google'},\r\n        {id:3,title:'make a call',content:'hello google'},\r\n\r\n    ]\r\n}\r\n\r\nconst projectReducer=(state=initState,action)=>{\r\n    switch (action.type) {\r\n        case 'ADD_PROJECT':\r\n            console.log('project created',action.project);\r\n            break;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error',action.err);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n}\r\nexport default projectReducer","import {combineReducers} from 'redux'\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport {firebaseReducer  } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer,\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n// Initialize Firebase\r\n  var config = {\r\n    apiKey: \"AIzaSyD6oR580Gt8s-lC-6kP5Q4x78UuzC1zvcc\",\r\n    authDomain: \"marioplane.firebaseapp.com\",\r\n    databaseURL: \"https://marioplane.firebaseio.com\",\r\n    projectId: \"marioplane\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"796894004413\"\r\n  };\r\n  firebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport rootReducer from './store/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore,getFirestore} from 'redux-firestore';\nimport {reactReduxFirebase,getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reduxFirestore(fbConfig),\n      reactReduxFirebase(fbConfig,{useFirestoreForProfile:true, userProfile:'users', attachAuthIsReady:true}) \n    ));\n\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister();\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}